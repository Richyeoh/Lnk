#!/usr/bin/env bash

# SHELL 变量的作用域：全局变量，局部变量，环境变量
# 有的变量只能在函数内部使用，这叫做局部变量（local variable）。
# 有的变量可以在当前 Shell 进程中使用，这叫做全局变量（global variable）。
# 而有的变量还可以在子进程中使用，这叫做环境变量（environment variable）。

# SHELL 局部变量

function foo() {
    local bar=500
}

foo
echo $bar

# bar 的变量在函数内部定义的，在函数外部也可以访问，由此证明它的作用域是全局的，而不是仅限于函数的内部。
# 如果想要bar的作用域仅在函数内部，可以使用local命令，这样变量就成了函数的局部变量。

# SHELL 全局变量
# 所谓全局变量，就是在整个当前SHELL进程中都有效，每个SHELL的进程都有自己的作用域，相互之间不受印象。
# 在 SHEL 中定义的变量是全局的。
# 在终端1中生命的变量，在终端2中是访问不到的。

# SHELL 环境变量
# 全局变量只在当前 Shell 进程中有效，对其它 Shell 进程和子进程都无效。如果使用export命令将全局变量导出，那么它就在所有的子进程中也有效了，这称为“环境变量”。
# 环境变量被创建所处的SHELL进程称为父进程，如果在父进程创建一个新的SHELL称为子进程，子进程会继承父进程的环境变量。
# 环境变量，可以传子传孙，但不可以子传父。
# 环境变量也是只在当前进程中生效。
# 环境变量也是临时的，通过 export 导出的环境变量只对当前 SHELL 进程以及所有的子进程有效，如果最顶层的父进程被关闭了，那么环境变量也就随之消失了，其它的进程也就无法使用了。

